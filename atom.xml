<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[NMOTW]]></title>
  <link href="http://nmotw.in/atom.xml" rel="self"/>
  <link href="http://nmotw.in/"/>
  <updated>2018-03-11T22:09:46+05:30</updated>
  <id>http://nmotw.in/</id>
  <author>
    <name><![CDATA[Hemanth.HM]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[lazy-cache]]></title>
    <link href="http://nmotw.in/lazy-cache/"/>
    <updated>2018-03-11T21:59:26+05:30</updated>
    <id>http://nmotw.in/lazy-cache</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/lazy-cache">lazy-cache</a></h1>

<blockquote><p>Cache requires to be lazy-loaded when needed.</p></blockquote>

<p><code>lazy-cache</code> uses native, plain-vanilla, tried and true javascript getters to call node's <code>require()</code> system for faster and safer code. (~1second to 50milliseconds)</p>

<p><strong>Get it:</strong> <code>npm install lazy-cache</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">lazyOS</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&quot;lazy-cache&quot;</span><span class="p">)(</span><span class="nx">require</span><span class="p">)(</span><span class="s1">&#39;os&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">lazyOS</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">lazyOS</span><span class="p">().</span><span class="nx">arch</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/lazy-cache/lazy-cache.gif" alt="lazy-cache.gif" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[async-exit-hook]]></title>
    <link href="http://nmotw.in/async-exit-hook/"/>
    <updated>2018-03-04T11:56:54+05:30</updated>
    <id>http://nmotw.in/async-exit-hook</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/async-exit-hook">async-exit-hook</a></h1>

<blockquote><p>Run some code when the process exits.</p></blockquote>

<p><code>async-exit-hook</code> is a fork from <code>exit-hook</code> which can catch:</p>

<ul>
<li>process SIGINT, SIGTERM and SIGHUP, SIGBREAK signals</li>
<li>process beforeExit and exit events</li>
<li>PM2's exit.</li>
</ul>


<p>As <code>process.on('exit')</code> event doesn't catch all the ways a process can exit.</p>

<p><strong>Get it:</strong> <code>npm install async-exit-hook</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">exitHook</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;exiting&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">exitHook</span><span class="p">(</span><span class="nx">callback</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;exiting&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">callback</span><span class="p">();</span>
</span><span class='line'>    <span class="p">},</span> <span class="mi">1000</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW</strong></p>

<p><img src="http://nmotw.in/images/async-exit-hook/async-exit-hook.gif" alt="async-exit-hook" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pressure]]></title>
    <link href="http://nmotw.in/pressure/"/>
    <updated>2018-02-25T09:29:07+05:30</updated>
    <id>http://nmotw.in/pressure</id>
    <content type="html"><![CDATA[<p><a href="https://www.npmjs.com/package/pressure">pressure</a></p>

<blockquote><p>Handle Force Touch, 3D Touch, and Pointer Pressure on the web.</p></blockquote>

<p>Devices implement force differently <code>pressure</code> is trying to solve it across all devices, with polyfill and multi touch support.</p>

<p><strong>Get it:</strong> <code>npm install pressure</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">Pressure</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;pressure&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Pressure</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;#element&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">start</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">){</span>
</span><span class='line'>    <span class="c1">// this is called on force start</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">end</span><span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="c1">// this is called on force end</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">startDeepPress</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">){</span>
</span><span class='line'>    <span class="c1">// this is called on &quot;force click&quot; / &quot;deep press&quot;, aka once the force is greater than 0.5</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">endDeepPress</span><span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="c1">// this is called when the &quot;force click&quot; / &quot;deep press&quot; end</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">change</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">force</span><span class="p">,</span> <span class="nx">event</span><span class="p">){</span>
</span><span class='line'>    <span class="c1">// this is called every time there is a change in pressure</span>
</span><span class='line'>    <span class="c1">// force will always be a value from 0 to 1 on mobile and desktop</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">unsupported</span><span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="c1">// NOTE: this is only called if the polyfill option is disabled!</span>
</span><span class='line'>    <span class="c1">// this is called once there is a touch on the element and the device or browser does not support Force or 3D touch</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Below are the supported devices:</p>

<ul>
<li>Microsoft Surface, Wacom Tablets (Device that supports pointer events)</li>
<li>iPhone 6s, iPhone 6s Plus, iPhone 7, iPhone 7 Plus</li>
<li>MacBook 2015 &amp; MacBook Pro 2015</li>
<li>Magic Trackpad 2</li>
<li>iPad Pro with Apple Pencil</li>
<li>Safari, Chrome, anything using WKWebView</li>
</ul>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/pressure/pressure.gif" alt="pressure" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[randexp]]></title>
    <link href="http://nmotw.in/randexp/"/>
    <updated>2018-02-17T21:00:15+05:30</updated>
    <id>http://nmotw.in/randexp</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/randexp">randexp</a></h1>

<blockquote><p>Generate a random string that matches a given RegExp.</p></blockquote>

<p>What better way to generate a random string than with a language you can use to express the string you want? -- 🐴</p>

<p><strong>Get it:</strong> <code>npm install randexp</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// sets and ranges and references</span>
</span><span class='line'><span class="k">new</span> <span class="nx">RandExp</span><span class="p">(</span><span class="sr">/&lt;([a-z]\w{0,20})&gt;foo&lt;\1&gt;/</span><span class="p">).</span><span class="nx">gen</span><span class="p">();</span>
</span><span class='line'><span class="c1">// =&gt; &lt;m5xhdg&gt;foo&lt;m5xhdg&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// wildcard</span>
</span><span class='line'><span class="k">new</span> <span class="nx">RandExp</span><span class="p">(</span><span class="sr">/random stuff: .+/</span><span class="p">).</span><span class="nx">gen</span><span class="p">();</span>
</span><span class='line'><span class="c1">// =&gt; random stuff: l3m;Hf9XYbI [YPaxV&gt;U*4-_F!WXQh9&gt;;rH3i l!8.zoh?[utt1OWFQrE ^~8zEQm]~tK</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ignore case</span>
</span><span class='line'><span class="k">new</span> <span class="nx">RandExp</span><span class="p">(</span><span class="sr">/xxx xtreme dragon warrior xxx/i</span><span class="p">).</span><span class="nx">gen</span><span class="p">();</span>
</span><span class='line'><span class="c1">// =&gt; xxx xtReME dRAGON warRiOR xXX</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/randexp/randexp.gif" alt="randexp.gif" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[thanks]]></title>
    <link href="http://nmotw.in/thanks/"/>
    <updated>2018-02-09T17:04:21+05:30</updated>
    <id>http://nmotw.in/thanks</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/thanks">thanks</a></h1>

<blockquote><p>🙌 Give thanks to the open source maintainers you depend on! ✨</p></blockquote>

<p><code>thanks</code> picks up the "nearest" <code>package.json</code> / <code>node_modules</code> folder and fetch all the mainterners who are seeking donation and lists them all in a neat table with the donation URL.</p>

<p><strong>Get it:</strong> <code>npm install -g thanks</code></p>

<p><strong>Usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>thanks --help
</span><span class='line'>
</span><span class='line'>thanks - 🙌 Give thanks to the open <span class="nb">source </span>maintainers you depend on! ✨
</span><span class='line'>
</span><span class='line'>Usage:
</span><span class='line'>    thanks &lt;flags&gt; <span class="o">[</span>CWD<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>    If CWD is omitted, <span class="k">then </span>the current working directory is used. The <span class="s2">&quot;nearest&quot;</span>
</span><span class='line'>    package.json / node_modules folder will be used.
</span><span class='line'>
</span><span class='line'>Flags:
</span><span class='line'>    -v, --version   Show current version
</span><span class='line'>    -h, --help      Show usage information
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/thanks/thanks.gif" alt="thanks.gif" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[graphql-request]]></title>
    <link href="http://nmotw.in/graphql-request/"/>
    <updated>2018-02-03T22:46:29+05:30</updated>
    <id>http://nmotw.in/graphql-request</id>
    <content type="html"><![CDATA[<h1><a href="">graphql-request</a></h1>

<blockquote><p>Minimal GraphQL client.</p></blockquote>

<p><code>graphql-request</code> is a minimal GraphQL promise based client. It's perfect for small scripts or simple apps, it doesn't have a built-in cache and has no integrations for frontend frameworks.</p>

<p><strong>Get it:</strong> <code>npm install graphql-request</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">import</span> <span class="p">{</span> <span class="nx">request</span><span class="p">,</span> <span class="nx">GraphQLClient</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">&#39;graphql-request&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Run GraphQL queries/mutations using a static function</span>
</span><span class='line'><span class="nx">request</span><span class="p">(</span><span class="nx">endpoint</span><span class="p">,</span> <span class="nx">query</span><span class="p">,</span> <span class="nx">variables</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="nx">data</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ... or create a GraphQL client instance to send requests</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">GraphQLClient</span><span class="p">(</span><span class="nx">endpoint</span><span class="p">,</span> <span class="p">{</span> <span class="nx">headers</span><span class="o">:</span> <span class="p">{}</span> <span class="p">})</span>
</span><span class='line'><span class="nx">client</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="nx">query</span><span class="p">,</span> <span class="nx">variables</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="nx">data</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/graphql-request/graphql-request.gif" alt="graphql-request.gif" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bytes]]></title>
    <link href="http://nmotw.in/bytes/"/>
    <updated>2018-01-28T22:24:12+05:30</updated>
    <id>http://nmotw.in/bytes</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/bytes">bytes</a></h1>

<blockquote><p>parse a string bytes &lt;=> bytes</p></blockquote>

<p><code>bytes</code> is a sweet little util that helps in parsing a string bytes (ex: 1TB) to bytes (1099511627776) and vice-versa.</p>

<p><strong>Get it:</strong> <code>npm install --save bytes</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">bytes</span><span class="p">(</span><span class="mi">1024</span><span class="p">);</span>
</span><span class='line'><span class="c1">// output: &#39;1KB&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">bytes</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
</span><span class='line'><span class="c1">// output: &#39;1000B&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">bytes</span><span class="p">(</span><span class="mi">1000</span><span class="p">,</span> <span class="p">{</span><span class="nx">thousandsSeparator</span><span class="o">:</span> <span class="s1">&#39; &#39;</span><span class="p">});</span>
</span><span class='line'><span class="c1">// output: &#39;1 000B&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">bytes</span><span class="p">(</span><span class="mi">1024</span> <span class="o">*</span> <span class="mf">1.7</span><span class="p">,</span> <span class="p">{</span><span class="nx">decimalPlaces</span><span class="o">:</span> <span class="mi">0</span><span class="p">});</span>
</span><span class='line'><span class="c1">// output: &#39;2KB&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">bytes</span><span class="p">(</span><span class="mi">1024</span><span class="p">,</span> <span class="p">{</span><span class="nx">unitSeparator</span><span class="o">:</span> <span class="s1">&#39; &#39;</span><span class="p">});</span>
</span><span class='line'><span class="c1">// output: &#39;1 KB&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Supported units and abbreviations:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">b</span> <span class="k">for</span> <span class="nx">bytes</span>
</span><span class='line'><span class="nx">kb</span> <span class="k">for</span> <span class="nx">kilobytes</span>
</span><span class='line'><span class="nx">mb</span> <span class="k">for</span> <span class="nx">megabytes</span>
</span><span class='line'><span class="nx">gb</span> <span class="k">for</span> <span class="nx">gigabytes</span>
</span><span class='line'><span class="nx">tb</span> <span class="k">for</span> <span class="nx">terabytes</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/bytes/bytes.gif" alt="bytes.gif" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[technicalindicators]]></title>
    <link href="http://nmotw.in/technicalindicators/"/>
    <updated>2018-01-21T23:43:42+05:30</updated>
    <id>http://nmotw.in/technicalindicators</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/technicalindicators">technicalindicators</a></h1>

<blockquote><p>Techincal Indicators!</p></blockquote>

<p>Techincal Indicators: "Any class of metrics whose value is derived from generic price activity in a stock or asset."</p>

<p>With this module we would get around 20 indicators, 2 charts, 23 candle stick patterns!</p>

<p><strong>Get it:</strong> <code>npm install technicalindicators</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">twoDayBullishInput</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">open</span><span class="o">:</span> <span class="p">[</span><span class="mf">23.25</span><span class="p">,</span><span class="mf">15.36</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">high</span><span class="o">:</span> <span class="p">[</span><span class="mf">25.10</span><span class="p">,</span><span class="mf">30.87</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">close</span><span class="o">:</span> <span class="p">[</span><span class="mf">21.44</span><span class="p">,</span><span class="mf">27.89</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">low</span><span class="o">:</span> <span class="p">[</span><span class="mf">20.82</span><span class="p">,</span><span class="mf">14.93</span><span class="p">],</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">bullish</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;technicalindicators&#39;</span><span class="p">).</span><span class="nx">bullish</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">bullish</span><span class="p">(</span><span class="nx">twoDayBullishInput</span><span class="p">)</span> <span class="c1">//true</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/technicalindicators/technicalindicators.gif" alt="technicalindicators.gif" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ccxt]]></title>
    <link href="http://nmotw.in/ccxt/"/>
    <updated>2018-01-14T17:37:05+05:30</updated>
    <id>http://nmotw.in/ccxt</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/ccxt">ccxt</a></h1>

<blockquote><p>Connect and trade with cryptocurrency.</p></blockquote>

<p><code>ccxt</code> is library for cryptocurrency trading and e-commerce with support for many bitcoin/ether/altcoin exchange markets and merchant APIs.</p>

<p><strong>Get it:</strong> <code>npm install ccxt</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">ccxt</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;ccxt&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">let</span> <span class="nx">exchange</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ccxt</span><span class="p">.</span><span class="nx">bitfinex</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">apiKey</span><span class="o">:</span> <span class="s1">&#39;4FlEDtxDl35gdEiobnfZ72vJeZteE4Bb7JdvqzjIjHq&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">secret</span><span class="o">:</span> <span class="s1">&#39;D4DXM8DZdHuAq9YptUsb42aWT1XBnGlIJgLi8a7tzFH&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nx">await</span> <span class="nx">exchange</span><span class="p">.</span><span class="nx">loadMarkets</span><span class="p">()</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">exchange</span><span class="p">.</span><span class="nx">symbols</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">let</span> <span class="nx">symbol</span> <span class="o">=</span> <span class="nx">exchange</span><span class="p">.</span><span class="nx">symbols</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">symbol</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">let</span> <span class="nx">ticker</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">exchange</span><span class="p">.</span><span class="nx">fetchTicker</span><span class="p">(</span><span class="nx">symbol</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">ticker</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">let</span> <span class="nx">orderbook</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">exchange</span><span class="p">.</span><span class="nx">fetchOrderBook</span><span class="p">(</span><span class="nx">symbol</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">orderbook</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">let</span> <span class="nx">balance</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">exchange</span><span class="p">.</span><span class="nx">fetchBalance</span><span class="p">()</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">balance</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/ccxt/ccxt.gif" alt="ccxt" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[circular-json]]></title>
    <link href="http://nmotw.in/circular-json/"/>
    <updated>2018-01-07T11:38:12+05:30</updated>
    <id>http://nmotw.in/circular-json</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/circular-json">circular-json</a></h1>

<blockquote><p>Handle circular JSON references with ease!</p></blockquote>

<p>You would have come acorss <code>TypeError: Converting circular structure to JSON</code> if you have been handling JSONs for a while now, <code>circular-json</code> serializes and deserializes otherwise valid JSON objects containing circular references into and from a specialized JSON format.</p>

<p><strong>Get it:</strong> <code>npm install circular-json</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="s1">&#39;use strict&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span>
</span><span class='line'>  <span class="nx">CircularJSON</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;circular-json&#39;</span><span class="p">),</span>
</span><span class='line'>  <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">foo</span><span class="o">:</span> <span class="s1">&#39;bar&#39;</span> <span class="p">},</span>
</span><span class='line'>  <span class="nx">str</span>
</span><span class='line'><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">obj</span><span class="p">.</span><span class="nx">self</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">;</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">str</span> <span class="o">=</span> <span class="nx">CircularJSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">obj</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// &quot;{\&quot;foo\&quot;:\&quot;bar\&quot;,\&quot;self\&quot;:\&quot;~\&quot;}&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">JSON.stringify(obj); would have resulted in:</span>
</span><span class='line'><span class="cm">TypeError: Converting circular structure to JSON</span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/circular-json/circular-json.gif" alt="circular-json" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[scrolldir]]></title>
    <link href="http://nmotw.in/scrolldir/"/>
    <updated>2017-12-30T15:32:47+05:30</updated>
    <id>http://nmotw.in/scrolldir</id>
    <content type="html"><![CDATA[<h1><a href="https://nmpjs.org/scrolldir">scrolldir</a></h1>

<blockquote><p>leverage scroll direction with CSS ⬆⬇</p></blockquote>

<p><code>0</code> dep, <code>1KB</code> micro JS lib to easily leverage vertical scroll direction in CSS via a data attribute.</p>

<p><strong>Get it:</strong> <code>npm install scrolldir</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">scrollDir</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="nx">scrollDir</span><span class="p">({</span> <span class="nx">attribute</span><span class="o">:</span> <span class="s1">&#39;new-attribute-name&#39;</span> <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">scrollDir</span><span class="p">({</span> <span class="nx">el</span><span class="o">:</span> <span class="s1">&#39;your-new-selector&#39;</span> <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">scrollDir</span><span class="p">({</span> <span class="nx">off</span><span class="o">:</span> <span class="kc">true</span> <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">scrollDir</span><span class="p">({</span> <span class="nx">direction</span><span class="o">:</span> <span class="s1">&#39;up&#39;</span> <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>ScrollDir will set the <code>data-scrolldir</code> attribute on the <code>&lt;html&gt;</code> element to <code>up</code> or <code>down</code>.</p>

<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/scrolldir/scrolldir.gif" alt="scrolldir.gif" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[christmas-ascii]]></title>
    <link href="http://nmotw.in/christmas-ascii/"/>
    <updated>2017-12-24T16:16:41+05:30</updated>
    <id>http://nmotw.in/christmas-ascii</id>
    <content type="html"><![CDATA[<h1><a href="https://nmpjs.com/christmas-ascii">christmas-ascii</a></h1>

<blockquote><p>Get some christmas ascii!</p></blockquote>

<p>Enjoy your vacation with some random christmas ascii on your terminal!</p>

<p><strong>Get it</strong> <code>npm install -g christmas-ascii</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">xmas</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;christmas-ascii&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">xmas</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>christmas-ascii -a
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>                    ____
</span><span class='line'>                  ;<span class="sb">`</span>    <span class="sb">`</span><span class="s1">&#39;-._</span>
</span><span class='line'><span class="s1">                 / \        /\</span>
</span><span class='line'><span class="s1">               /`   \      |  ;</span>
</span><span class='line'><span class="s1">              /      \     |  |</span>
</span><span class='line'><span class="s1">             /        `\   |  |</span>
</span><span class='line'><span class="s1">            /           \_ /  |</span>
</span><span class='line'><span class="s1">           ;            / `\  |</span>
</span><span class='line'><span class="s1">          ,|_  __       \__/  |</span>
</span><span class='line'><span class="s1">          _\_o/_(             |_</span>
</span><span class='line'><span class="s1">         /`&#39;</span><span class="o">=</span>/<span class="se">\=</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="o">==</span><span class="s1">&#39;==&#39;</span><span class="o">==</span><span class="s1">&#39;==&#39;</span><span class="sb">`</span><span class="se">\</span>
</span><span class='line'>         |   <span class="o">)</span>/                 |
</span><span class='line'>         <span class="se">\ </span>                     /
</span><span class='line'>         /<span class="s1">&#39;;=&#39;&#39;==&#39;&#39;==&#39;&#39;==&#39;&#39;==&#39;</span>;<span class="sb">`</span><span class="se">\</span>
</span><span class='line'>         |  /<span class="sb">`</span>   /~<span class="se">\ </span> /~<span class="se">\ </span>  <span class="sb">`</span><span class="se">\ </span> |
</span><span class='line'>         |  <span class="se">\ </span> _ <span class="se">\o</span>/  <span class="se">\o</span>/ _  /  |
</span><span class='line'>         <span class="se">\ </span> ; <span class="o">(</span>_<span class="o">)</span>   __   <span class="o">(</span>_<span class="o">)</span> ;  /
</span><span class='line'>         /  |<span class="se">\_</span>.-<span class="s1">&#39;&#39;</span><span class="o">(</span>__<span class="o">)</span><span class="s1">&#39;&#39;</span>-._/|  <span class="se">\</span>
</span><span class='line'>        |   <span class="se">\ </span>      /<span class="se">\ </span>      /   |
</span><span class='line'>       /     <span class="s1">&#39;.___.&#39;</span>__<span class="s1">&#39;.___.&#39;</span>     <span class="se">\</span>
</span><span class='line'>      |             <span class="se">\/</span>             |
</span><span class='line'>      |                            |
</span><span class='line'>      <span class="se">\ </span>                           /
</span><span class='line'>      |                            |
</span><span class='line'>       <span class="se">\ </span>                         /
</span><span class='line'>        <span class="s1">&#39;.                      .&#39;</span>
</span><span class='line'>          <span class="s1">&#39;-.__            __.-&#39;</span>
</span><span class='line'>               <span class="s1">&#39;---&#39;</span>--<span class="s1">&#39;---&#39;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>                  / <span class="se">\</span>
</span><span class='line'>                 /   <span class="se">\</span>
</span><span class='line'>                /     <span class="se">\</span>
</span><span class='line'>               /       <span class="se">\</span>
</span><span class='line'>              /         <span class="se">\</span>
</span><span class='line'>             /           <span class="se">\</span>
</span><span class='line'>            /             <span class="se">\</span>
</span><span class='line'>           /_______________<span class="se">\</span>
</span><span class='line'>          <span class="o">[</span>_________________<span class="o">]</span>
</span><span class='line'>         / / <span class="o">(</span>_o_<span class="o">)</span>   <span class="o">(</span>_o_<span class="o">)</span> <span class="se">\ \</span>
</span><span class='line'>        <span class="o">(</span>_<span class="o">(</span>______,   ,______<span class="o">)</span>_<span class="o">)</span>
</span><span class='line'>       <span class="o">(</span> <span class="se">\ </span>     .<span class="sb">`</span>---<span class="s1">&#39;.      / )</span>
</span><span class='line'><span class="s1">       ( /`~&#39;&#39;&#39;</span><span class="sb">`</span>  ._.  <span class="sb">`</span><span class="s1">&#39;&#39;&#39;~`\ )</span>
</span><span class='line'><span class="s1">        (                     )</span>
</span><span class='line'><span class="s1">       (                       )</span>
</span><span class='line'><span class="s1">      (                         )</span>
</span><span class='line'><span class="s1">      (                         )</span>
</span><span class='line'><span class="s1">       (                       )</span>
</span><span class='line'><span class="s1">        (                     )</span>
</span><span class='line'><span class="s1">         `(                 )&#39;</span>
</span><span class='line'>           <span class="sb">`</span><span class="s1">&#39;~&#39;</span>---,.,---<span class="s1">&#39;~&#39;</span><span class="sb">`</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/christmas-ascii/christmas-ascii.gif" alt="christmas-ascii" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[portscanner]]></title>
    <link href="http://nmotw.in/portscanner/"/>
    <updated>2017-12-17T15:16:40+05:30</updated>
    <id>http://nmotw.in/portscanner</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/portscanner">portscanner</a></h1>

<blockquote><p>port scanner!</p></blockquote>

<p><code>portscanner</code> helps us to check the port status and free port for a given host.</p>

<p><strong>Get it:</strong> <code>npm install portscanner</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">portScanner</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;portscanner&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">portscanner</span><span class="p">.</span><span class="nx">checkPortStatus</span><span class="p">(</span><span class="mi">3000</span><span class="p">,</span> <span class="s1">&#39;127.0.0.1&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">portscanner</span><span class="p">.</span><span class="nx">findAPortInUse</span><span class="p">([</span><span class="mi">3000</span><span class="p">,</span> <span class="mi">3005</span><span class="p">,</span> <span class="mi">3006</span><span class="p">],</span> <span class="s1">&#39;127.0.0.1&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">)</span>
</span><span class='line'><span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW</strong></p>

<p><img src="http://nmotw.in/images/portscanner/portscanner.gif" alt="portscanner.gif" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jsvu]]></title>
    <link href="http://nmotw.in/jsvu/"/>
    <updated>2017-12-07T22:19:37+05:30</updated>
    <id>http://nmotw.in/jsvu</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/jsvu">jsvu</a></h1>

<blockquote><p>JavaScript (engine) Version Updater.</p></blockquote>

<p><code>jsvu</code> makes it easy to fetch the latest versions of JavaScript engines for a specific OS, without the hassels of compiling them!</p>

<p><strong>Get it:</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install -g jsvu</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># in your ~/*.rc</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;${HOME}/.jsvu:${PATH}&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>jsvu
</span></code></pre></td></tr></table></div></figure>


<p>It's prompts for the OS and the engine and install them based on your choice, it can install Chakra/ChakraCore, JavaScriptCore, SpiderMonk
ey and V8 for you.</p>

<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/jsvu/jsvu.gif" alt="jsvu.gif" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hsjon]]></title>
    <link href="http://nmotw.in/hsjon/"/>
    <updated>2017-12-02T11:03:06+05:30</updated>
    <id>http://nmotw.in/hsjon</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/hjson">hsjon</a></h1>

<blockquote><p>User interface for JSON.</p></blockquote>

<p><code>hsjon</code> is a syntax extension to JSON, not a replacement nor shall be added to the JSON spec.</p>

<p>It allows (multiline) comments, trailling commas, non-mandatory quotes to name a few.</p>

<p><strong>Get it:</strong> <code>npm install hsjon</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">Hjson</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;hjson&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span> <span class="nx">obj</span> <span class="o">=</span> <span class="nx">Hjson</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">hjsonText</span><span class="p">);</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">text2</span> <span class="o">=</span> <span class="nx">Hjson</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">obj</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Sample hjson file:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">comments</span> <span class="nx">are</span> <span class="nx">treated</span> <span class="nx">like</span> <span class="nx">whitespace</span> <span class="o">-</span> <span class="nx">they</span> <span class="nx">are</span> <span class="nx">not</span> <span class="nx">parsed</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">hello</span><span class="o">:</span>       <span class="nx">Hello</span> <span class="nx">Human</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// js style comment</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  multiline comment</span>
</span><span class='line'><span class="cm">  multiline comment</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">#</span> <span class="nx">text</span>
</span><span class='line'>  <span class="nx">text</span><span class="o">:</span>        <span class="nx">This</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">valid</span> <span class="nx">string</span> <span class="nx">value</span><span class="p">.</span>
</span><span class='line'>  <span class="nx">quote</span><span class="o">:</span>       <span class="s2">&quot;You need quotes\tfor escapes&quot;</span>
</span><span class='line'>  <span class="nx">otherwise</span><span class="o">:</span>   <span class="o">&lt;</span><span class="nx">div</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;cool&quot;</span><span class="o">&gt;</span><span class="nx">life</span> <span class="nx">without</span> <span class="nx">escapes</span> <span class="nx">is</span> <span class="nx">bliss</span><span class="o">!&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">#</span> <span class="nx">keys</span>
</span><span class='line'>  <span class="nx">abc</span><span class="o">-</span><span class="mi">123</span><span class="o">:</span>      <span class="nx">no</span> <span class="nx">quotes</span> <span class="k">for</span> <span class="nx">keys</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">#</span> <span class="nx">comma</span>
</span><span class='line'>  <span class="nx">commas</span><span class="o">:</span>      <span class="s2">&quot;can be omitted at the end of the line&quot;</span>
</span><span class='line'>  <span class="nx">but</span><span class="o">:</span>         <span class="p">[</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span> <span class="p">]</span> <span class="err">#</span> <span class="nx">not</span> <span class="nx">between</span> <span class="nx">elements</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">same</span> <span class="nx">line</span>
</span><span class='line'>  <span class="nx">trailing</span><span class="o">:</span>    <span class="p">[</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="p">]</span> <span class="err">#</span> <span class="nx">a</span> <span class="nx">trailing</span> <span class="nx">comma</span> <span class="nx">is</span> <span class="nx">OK</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">#</span> <span class="nx">multiline</span> <span class="nx">string</span>
</span><span class='line'>  <span class="nx">multiline</span><span class="o">:</span>
</span><span class='line'>    <span class="s1">&#39;&#39;&#39;</span>
</span><span class='line'><span class="s1">    first line</span>
</span><span class='line'><span class="s1">      indented line</span>
</span><span class='line'><span class="s1">    third line</span>
</span><span class='line'><span class="s1">    &#39;&#39;&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">#</span> <span class="nx">numbers</span><span class="p">,</span> <span class="nx">keywords</span> <span class="nx">and</span> <span class="nx">arrays</span> <span class="nx">work</span> <span class="nx">just</span> <span class="nx">like</span> <span class="k">in</span> <span class="nx">JSON</span>
</span><span class='line'>  <span class="nx">number</span><span class="o">:</span>      <span class="mi">5</span>
</span><span class='line'>  <span class="nx">negative</span><span class="o">:</span>    <span class="o">-</span><span class="mf">4.2</span>
</span><span class='line'>  <span class="nx">yes</span><span class="o">:</span>         <span class="kc">true</span>
</span><span class='line'>  <span class="nx">no</span><span class="o">:</span>          <span class="kc">false</span>
</span><span class='line'>  <span class="kc">null</span><span class="o">:</span>        <span class="kc">null</span>
</span><span class='line'>  <span class="nx">array</span><span class="o">:</span>       <span class="p">[</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span> <span class="p">]</span>
</span><span class='line'>  <span class="nx">array2</span><span class="o">:</span>      <span class="p">[</span>
</span><span class='line'>    <span class="mi">1</span>
</span><span class='line'>    <span class="mi">2</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/hjson/hjson.gif" alt="hjson" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[clean-deep]]></title>
    <link href="http://nmotw.in/clean-deep/"/>
    <updated>2017-11-23T11:12:26+05:30</updated>
    <id>http://nmotw.in/clean-deep</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/clean-deep">clean-deep</a></h1>

<blockquote><p>Remove empty values from objects.</p></blockquote>

<p><code>clean-deep</code> helps us to clean objects by removing empty <code>[]</code>, <code>{}</code>, <code>null</code>, <code>undefined</code>, <code>''</code> from objects.</p>

<p>Around of 50 lines of code which makes use of <code>lodash.transform</code> and recursively clean up your objects.</p>

<p>You could pass in the below options as per your requirement of the clean-up process.</p>

<table>
<thead>
<tr>
<th>Option            </th>
<th> Default value </th>
<th> Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>emptyArrays</em>     </td>
<td> <em>true</em>        </td>
<td> Remove empty arrays, ie: <code>[]</code></td>
</tr>
<tr>
<td><em>emptyObjects</em>    </td>
<td> <em>true</em>        </td>
<td> Remove empty objects, ie: <code>{}</code></td>
</tr>
<tr>
<td><em>emptyStrings</em>    </td>
<td> <em>true</em>        </td>
<td> Remove empty strings, ie: <code>''</code></td>
</tr>
<tr>
<td><em>nullValues</em>      </td>
<td> <em>true</em>        </td>
<td> Remove null values, ie: <code>null</code></td>
</tr>
<tr>
<td><em>undefinedValues</em> </td>
<td> <em>true</em>        </td>
<td> Remove null values, ie: <code>undefined</code></td>
</tr>
</tbody>
</table>


<p><strong>Get it:</strong> <code>npm install clean-deep</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kr">const</span> <span class="nx">cleanDeep</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;clean-deep&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">object</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">bar</span><span class="o">:</span> <span class="p">{},</span>
</span><span class='line'>  <span class="nx">baz</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">biz</span><span class="o">:</span> <span class="s1">&#39;baz&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">foo</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">net</span><span class="o">:</span> <span class="p">[],</span>
</span><span class='line'>  <span class="nx">nit</span><span class="o">:</span> <span class="kc">undefined</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">qux</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">baz</span><span class="o">:</span> <span class="s1">&#39;boz&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">txi</span><span class="o">:</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nx">cleanDeep</span><span class="p">(</span><span class="nx">object</span><span class="p">);</span>
</span><span class='line'><span class="c1">// =&gt; { biz: &#39;baz&#39;, qux: { baz: &#39;boz&#39; } }</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/clean-deep/clean-deep.gif" alt="clean-deep" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[webtorrent-element]]></title>
    <link href="http://nmotw.in/webtorrent-element/"/>
    <updated>2017-11-16T16:09:50+05:30</updated>
    <id>http://nmotw.in/webtorrent-element</id>
    <content type="html"><![CDATA[<p><a href="https://npmjs.com/package/webtorrent-element">webtorrent-element</a></p>

<blockquote><p>webcomponent for torrents.</p></blockquote>

<p>You would not really appreciate this module if you haven't read <a href="https://medium.com/@mikeal/ive-seen-the-future-it-s-full-of-html-2577246f2210">I’ve seen the future, it’s full of HTML.</a></p>

<p>This module makes use of <code>webtorrent</code> to implement an HTML element you can use to display content on WebTorrent.</p>

<p><strong>Get it:</strong> <code>npm install --save webtorrent-element</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// This gets bundled.</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">WebTorrentComponent</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;webtorrent-element&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">let</span> <span class="nx">elem</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">WebTorrentComponent</span><span class="p">();</span>
</span><span class='line'><span class="nx">elem</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">MAGNETURL</span><span class="p">;</span> <span class="c1">// MANGETURL to be viewed.</span>
</span><span class='line'><span class="nx">elem</span><span class="p">.</span><span class="nx">file</span> <span class="o">=</span> <span class="s1">&#39;Sintel.mp4&#39;</span><span class="p">;</span> <span class="c1">// File in that torrent.</span>
</span><span class='line'><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">elem</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/webtorrent-element/webtorrent-element.gif" alt="webtorrent-element" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[server]]></title>
    <link href="http://nmotw.in/server/"/>
    <updated>2017-11-10T09:59:34+05:30</updated>
    <id>http://nmotw.in/server</id>
    <content type="html"><![CDATA[<p><a href="https://npmjs.com/server">server</a> is build upon <code>express@4</code> tries to bring simplicity in expressing your server code.</p>

<p><img src="http://nmotw.in/images/server/server-info.png" alt="server-info" /></p>

<p><strong>Get it:</strong> <code>npm install server</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;server&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">server</span><span class="p">(</span><span class="nx">ctx</span> <span class="o">=&gt;</span> <span class="s1">&#39;Hello world&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;server&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kr">const</span> <span class="p">{</span> <span class="nx">get</span><span class="p">,</span> <span class="nx">post</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;server/router&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kr">const</span> <span class="p">{</span> <span class="nx">render</span><span class="p">,</span> <span class="nx">json</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;server/reply&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">server</span><span class="p">([</span>
</span><span class='line'>  <span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="nx">ctx</span> <span class="o">=&gt;</span> <span class="nx">render</span><span class="p">(</span><span class="s1">&#39;index.hbs&#39;</span><span class="p">)),</span>
</span><span class='line'>  <span class="nx">post</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="nx">ctx</span> <span class="o">=&gt;</span> <span class="nx">json</span><span class="p">(</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">data</span><span class="p">)),</span>
</span><span class='line'>  <span class="nx">get</span><span class="p">(</span><span class="nx">ctx</span> <span class="o">=&gt;</span> <span class="nx">status</span><span class="p">(</span><span class="mi">404</span><span class="p">))</span>
</span><span class='line'><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW:</strong></p>

<p><img src="http://nmotw.in/images/server/server.gif" alt="server.gif" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[qrcode-terminal]]></title>
    <link href="http://nmotw.in/qrcode-terminal/"/>
    <updated>2017-10-31T12:56:26+05:30</updated>
    <id>http://nmotw.in/qrcode-terminal</id>
    <content type="html"><![CDATA[<p><a href="https://www.npmjs.com/package/qrcode-terminal">qrcode-terminal</a></p>

<blockquote><p>qrcode on terminal.</p></blockquote>

<p><code>qrcode-terminal</code> Going where no QRCode has gone before ;)</p>

<p>Helps you to generate qrcode in your terminal, maybe be URLs or just plain text, this module does a good job in displaying the qrcode on terminal.</p>

<p>It would be great if this module can generate responsive qr-code in the terminal, which can be bit of a challenge, it can generate <code>small</code> or <code>normal</code> ones though.</p>

<p><strong>Get it:</strong> <code>npm install qrcode-terminal</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">qrcode</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;qrcode-terminal&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">qrcode</span><span class="p">.</span><span class="nx">generate</span><span class="p">(</span><span class="s1">&#39;This will be a QRCode, eh!&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">qrcode</span><span class="p">.</span><span class="nx">setErrorLevel</span><span class="p">(</span><span class="s1">&#39;Q&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">qrcode</span><span class="p">.</span><span class="nx">generate</span><span class="p">(</span><span class="s1">&#39;This will be a QRCode with error level Q!&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">qrcode</span><span class="p">.</span><span class="nx">generate</span><span class="p">(</span><span class="s1">&#39;https://nmotw.in&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">qrcode</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">qrcode</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/qrcode-terminal/qrcode-terminal.gif" alt="qrcode-terminal" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[babar]]></title>
    <link href="http://nmotw.in/babar/"/>
    <updated>2017-10-25T00:35:48+05:30</updated>
    <id>http://nmotw.in/babar</id>
    <content type="html"><![CDATA[<h1><a href="https://npmjs.org/babar">babar</a></h1>

<blockquote><p>Draw bar charts in your console.</p></blockquote>

<p><code>193</code> lines of code to get bar charts on your console!</p>

<p>Easy to use, lightweight, color output, ASCII output, automatically bucketizes values (currently only averages values in a bucket).</p>

<p><strong>Get it:</strong> <code>npm install babar</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">babar</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;babar&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">babar</span><span class="p">([[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">]]));</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">babar</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;babar&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">babar</span><span class="p">([[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">]],</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">color</span><span class="o">:</span> <span class="s1">&#39;green&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">width</span><span class="o">:</span> <span class="mi">40</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">height</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">maxY</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">yFractions</span><span class="o">:</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}));</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/babar/babar.gif" alt="babar" /></p>
]]></content>
  </entry>
  
</feed>
