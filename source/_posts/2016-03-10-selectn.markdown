---
layout: post
title: "selectn"
date: 2016-03-10 14:54:59 +0000
comments: true
categories: util 
---

[selectn](https://www.npmjs.com/package/selectn)
> Resolve deeply-nested object properties via dot/bracket-notation string or array path while mitigating TypeErrors.

###### refactor this:

    person && person.info && person.info.name && person.info.name.full

###### into:

    selectn('info.name.full', person)

###### or this:

    contacts.map(function (contact) {
      return contact && contact.addresses && contact.addresses[0]
    })

###### into:

    contacts.map(selectn('addresses[0]')))

## Installation

    > npm install selectn --save

## Features

  - Mitigates boilerplate guards like `if (obj && obj.a && obj.a.b && obj.a.b.c) { return obj.a.b.c; }`.
  - Mitigates **TypeError** `Cannot read property '...' of undefined`.
  - Supports multiple levels of array nesting (i.e. `group[0].section.a.seat[3]`).
  - Supports dashed key access (i.e. `stats.temperature-today`).
  - If value at path is a function, the value returned is the return value of invoking the function.
  - [Partial application is automatic][Un-bind your JS with curry] when you omit the second argument (i.e. `selectn` is curried).
  - Property accessor generated by `selectn` can be passed to higher-order functions like [map] or [filter].
  - Compatible with [modern and legacy browsers][browsers], Node/CommonJS, and AMD.
  - Haskell style [parameter order] allows for [pointfree style programming][Un-bind your JS with curry].

## Non-Features

  - No [eval][] or [Function][] (see: [`eval`][note] in disguise).
  - No [typeof][] since, [typeof][] is not a real solution to this problem but can _appear_ to be due to the way the global scope is _implied_.

## GIF FTW!

[![selectn](/images/selectn/selectn.gif)](https://www.npmjs.org/package/selectn)
Checkout the project's `readme.md` for [more examples](https://github.com/wilmoore/selectn.js#usage-examples).

[browsers]: https://saucelabs.com/u/selectn
[Function]: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function
[Un-bind your JS with curry]: https://medium.com/@wilmoore/un-bind-your-js-with-curry-a8657a4138cb#.6dswguc2q
[eval]: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/eval
[filter]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter
[map]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map
[note]: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Member_Operators#Note_on_eval
[parameter order]: https://wiki.haskell.org/Parameter_order
[typeof]: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/typeof
