<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cli | NMOTW]]></title>
  <link href="http://nmotw.in//github/public/categories/cli/atom.xml" rel="self"/>
  <link href="http://nmotw.in//github/"/>
  <updated>2018-01-28T22:34:06+05:30</updated>
  <id>http://nmotw.in//github/</id>
  <author>
    <name><![CDATA[Hemanth.HM]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[portscanner]]></title>
    <link href="http://nmotw.in//github/portscanner/"/>
    <updated>2017-12-17T15:16:40+05:30</updated>
    <id>http://nmotw.in//github/portscanner</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/portscanner">portscanner</a></h1>

<blockquote><p>port scanner!</p></blockquote>

<p><code>portscanner</code> helps us to check the port status and free port for a given host.</p>

<p><strong>Get it:</strong> <code>npm install portscanner</code></p>

<p><strong>Sample usage:</strong></p>

<p>```js</p>

<p>const portScanner = require('portscanner');</p>

<p>portscanner.checkPortStatus(3000, '127.0.0.1')
.then(console.log);</p>

<p>portscanner.findAPortInUse([3000, 3005, 3006], '127.0.0.1')
.then(console.log)
.catch(console.error);
```</p>

<p><strong>GIF FTW</strong></p>

<p><img src="/images/portscanner/portscanner.gif" alt="portscanner.gif" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[qrcode-terminal]]></title>
    <link href="http://nmotw.in//github/qrcode-terminal/"/>
    <updated>2017-10-31T12:56:26+05:30</updated>
    <id>http://nmotw.in//github/qrcode-terminal</id>
    <content type="html"><![CDATA[<p><a href="https://www.npmjs.com/package/qrcode-terminal">qrcode-terminal</a></p>

<blockquote><p>qrcode on terminal.</p></blockquote>

<p><code>qrcode-terminal</code> Going where no QRCode has gone before ;)</p>

<p>Helps you to generate qrcode in your terminal, maybe be URLs or just plain text, this module does a good job in displaying the qrcode on terminal.</p>

<p>It would be great if this module can generate responsive qr-code in the terminal, which can be bit of a challenge, it can generate <code>small</code> or <code>normal</code> ones though.</p>

<p><strong>Get it:</strong> <code>npm install qrcode-terminal</code></p>

<p><strong>Sample usage:</strong></p>

<p>```js
const qrcode = require('qrcode-terminal');</p>

<p>qrcode.generate('This will be a QRCode, eh!');</p>

<p>qrcode.setErrorLevel('Q');
qrcode.generate('This will be a QRCode with error level Q!');</p>

<p>qrcode.generate('https://nmotw.in', function (qrcode) {</p>

<pre><code>console.log(qrcode);
</code></pre>

<p>});
```</p>

<p><strong>GIF FTW!</strong></p>

<p><img src="/images/qrcode-terminal/qrcode-terminal.gif" alt="qrcode-terminal" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[babar]]></title>
    <link href="http://nmotw.in//github/babar/"/>
    <updated>2017-10-25T00:35:48+05:30</updated>
    <id>http://nmotw.in//github/babar</id>
    <content type="html"><![CDATA[<h1><a href="https://npmjs.org/babar">babar</a></h1>

<blockquote><p>Draw bar charts in your console.</p></blockquote>

<p><code>193</code> lines of code to get bar charts on your console!</p>

<p>Easy to use, lightweight, color output, ASCII output, automatically bucketizes values (currently only averages values in a bucket).</p>

<p><strong>Get it:</strong> <code>npm install babar</code></p>

<p><strong>Sample usage:</strong></p>

<p><code>js
var babar = require('babar');
console.log(babar([[0, 1], [1, 5], [2, 5], [3, 1], [4, 6]]));
</code></p>

<p>```js
var babar = require('babar');</p>

<p>console.log(babar([[0, 1], [1, 5], [2, 5], [3, 1], [4, 6]], {
  color: 'green',
  width: 40,
  height: 10,
  maxY: 10,
  yFractions: 1
}));
```</p>

<p><strong>GIF FTW!</strong></p>

<p><img src="/images/babar/babar.gif" alt="babar" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gtop]]></title>
    <link href="http://nmotw.in//github/gtop/"/>
    <updated>2017-08-18T13:25:20+05:30</updated>
    <id>http://nmotw.in//github/gtop</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/gtop">gtop</a></h1>

<blockquote><p>System monitoring dashboard for terminal.</p></blockquote>

<p><code>gtop</code> could be termed as the node's version of <a href="http://hisham.hm/htop/">htop</a>, gives a very need interface on the cli that would list out the below:</p>

<ul>
<li><p>CPU history.</p></li>
<li><p>Memory and Swap History.</p></li>
<li><p>Memory and Netowrk usage.</p></li>
<li><p>Disk usage.</p></li>
<li><p>Process list.</p></li>
</ul>


<p>You can sort the process table by pressing:</p>

<p><code>p</code>: Process Id
<code>c</code>: CPU usage
<code>m</code>: Memory usage</p>

<p><strong>Get it:</strong> <code>npm install -g gtop</code></p>

<p><strong>Sample usage:</strong></p>

<p>```
$ gtop</p>

<h1>In case of font issues: LANG=en_US.utf8 TERM=xterm-256color gtop</h1>

<p>```</p>

<p><strong>GIF FTW!</strong></p>

<p><img src="/images/gtop/gtop.gif" alt="gtop" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vtop]]></title>
    <link href="http://nmotw.in//github/vtop/"/>
    <updated>2017-06-10T15:59:12+05:30</updated>
    <id>http://nmotw.in//github/vtop</id>
    <content type="html"><![CDATA[<h1><a href="https://npmjs.org/packages/vtop">vtop</a></h1>

<blockquote><p>A graphical activity monitor for the command line.</p></blockquote>

<p><strong>Why?</strong></p>

<p>For mointoring CPU usage and memory across multi-process applications.</p>

<p>Makes use of <a href="https://www.npmjs.com/package/drawille">drawille</a> for drawing in terminal with unicode braille characters.</p>

<p><strong>Get it:</strong> <code>npm i -g vtop</code></p>

<p><strong>Sample usage:</strong></p>

<p>```sh
âžœ  nmotw.in>  vtop --help</p>

<p>  Usage: vtop [options]</p>

<p>  Options:</p>

<pre><code>-h, --help              output usage information
-t, --theme  [name]     set the vtop theme [acid|becca|brew|dark|monokai|parallax|seti|wizard]
--quit-after [seconds]  Quits vtop after interval
-V, --version           output the version number
</code></pre>

<p>```</p>

<p><strong>GIF FTW!</strong></p>

<p><img src="/images/vtop/vtop.gif" alt="vtop.gif" /></p>
]]></content>
  </entry>
  
</feed>
